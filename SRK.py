cr = lambda s_no, value, multiplier=None: {"S.No": s_no, "Value": value, "Multiplier": multiplier}

# Define the table as a list of dictionaries
table = [
cr(	1	,	16	),
cr(	2	,	32	),
cr(	3	,	16	),
cr(	4	,	13	),
cr(	5	,	4	),
cr(	6	,	30	),
cr(	7	,	34	),
cr(	8	,	29	),
cr(	9	,	33	),
cr(	10	,	3	),
cr(	11	,	18	),
cr(	12	,	33	),
cr(	13	,	0	),
cr(	14	,	8	),
cr(	15	,	13	),
cr(	16	,	8	),
cr(	17	,	0	),
cr(	18	,	8	),
cr(	19	,	7	),
cr(	20	,	0	),
cr(	21	,	16	),
cr(	22	,	12	),
cr(	23	,	25	),
cr(	24	,	3	),
cr(	25	,	10	),
cr(	26	,	13	),
cr(	27	,	20	),
cr(	28	,	32	),
cr(	29	,	12	),
cr(	30	,	34	),
cr(	31	,	16	),
cr(	32	,	14	),
cr(	33	,	35	),
cr(	34	,	15	),
cr(	35	,	23	),
cr(	36	,	4	),
cr(	37	,	7	),
cr(	38	,	24	),
cr(	39	,	4	),
cr(	40	,	11	),
cr(	41	,	12	),
cr(	42	,	20	),
cr(	43	,	10	),
cr(	44	,	32	),
cr(	45	,	5	),
cr(	46	,	35	),
cr(	47	,	5	),
cr(	48	,	15	),
cr(	49	,	22	),
cr(	50	,	29	),
cr(	51	,	7	),
cr(	52	,	29	),
cr(	53	,	26	),
cr(	54	,	8	),
cr(	55	,	26	),
cr(	56	,	21	),
cr(	57	,	8	),
cr(	58	,	17	),
cr(	59	,	4	),
cr(	60	,	26	),
cr(	61	,	17	),
cr(	62	,	0	),
cr(	63	,	31	),
cr(	64	,	10	),
cr(	65	,	21	),
cr(	66	,	3	),
cr(	67	,	23	),
cr(	68	,	25	),
cr(	69	,	33	),
cr(	70	,	13	),
cr(	71	,	17	),
cr(	72	,	5	),
cr(	73	,	4	),
cr(	74	,	27	),
cr(	75	,	7	),
cr(	76	,	36	),
cr(	77	,	19	),
cr(	78	,	18	),
cr(	79	,	4	),
cr(	80	,	36	),
cr(	81	,	4	),
cr(	82	,	23	),
cr(	83	,	0	),
cr(	84	,	20	),
cr(	85	,	21	),
cr(	86	,	13	),
cr(	87	,	16	),
cr(	88	,	25	),
cr(	89	,	32	),
cr(	90	,	19	),
cr(	91	,	23	),
cr(	92	,	30	),
cr(	93	,	17	),
cr(	94	,	3	),
cr(	95	,	2	),
cr(	96	,	18	),
cr(	97	,	5	),
cr(	98	,	4	),
cr(	99	,	31	),
cr(	100	,	4	),
cr(	101	,	34	),
cr(	102	,	8	),
cr(	103	,	11	),
cr(	104	,	28	),
cr(	105	,	14	),
cr(	106	,	35	),
cr(	107	,	20	),
cr(	108	,	35	),
cr(	109	,	25	),
cr(	110	,	0	),
cr(	111	,	1	),
cr(	112	,	9	),
cr(	113	,	4	),
cr(	114	,	27	),
cr(	115	,	33	),
cr(	116	,	18	),
cr(	117	,	26	),
cr(	118	,	20	),
cr(	119	,	31	),
cr(	120	,	28	),
cr(	121	,	20	),
cr(	122	,	5	),
cr(	123	,	25	),
cr(	124	,	6	),
cr(	125	,	35	),
cr(	126	,	28	),
cr(	127	,	13	),
cr(	128	,	3	),
cr(	129	,	27	),
cr(	130	,	8	),
cr(	131	,	15	),
cr(	132	,	31	),
cr(	133	,	19	),
cr(	134	,	5	),
cr(	135	,	18	),
cr(	136	,	7	),
cr(	137	,	32	),
cr(	138	,	21	),
cr(	139	,	14	),
cr(	140	,	25	),
cr(	141	,	27	),
cr(	142	,	11	),
cr(	143	,	13	),
cr(	144	,	17	),
cr(	145	,	36	),
cr(	146	,	28	),
cr(	147	,	34	),
cr(	148	,	34	),
cr(	149	,	2	),
cr(	150	,	6	),
cr(	151	,	17	),
cr(	152	,	12	),
cr(	153	,	6	),
cr(	154	,	33	),
cr(	155	,	1	),
cr(	156	,	10	),
cr(	157	,	20	),
cr(	158	,	36	),
cr(	159	,	5	),
cr(	160	,	26	),
cr(	161	,	26	),
cr(	162	,	27	),
cr(	163	,	6	),
cr(	164	,	6	),
cr(	165	,	8	),
cr(	166	,	22	),
cr(	167	,	30	),
cr(	168	,	11	),
cr(	169	,	27	),
cr(	170	,	18	),
cr(	171	,	35	),
cr(	172	,	21	),
cr(	173	,	20	),
cr(	174	,	31	),
cr(	175	,	8	),
cr(	176	,	20	),
cr(	177	,	36	),
cr(	178	,	16	),
cr(	179	,	20	),
cr(	180	,	20	),
cr(	181	,	27	),
cr(	182	,	21	),
cr(	183	,	0	),
cr(	184	,	26	),
cr(	185	,	18	),
cr(	186	,	32	),
cr(	187	,	22	),
cr(	188	,	22	),
cr(	189	,	20	),
cr(	190	,	15	),
cr(	191	,	5	),
cr(	192	,	24	),
cr(	193	,	34	),
cr(	194	,	36	),
cr(	195	,	33	),
cr(	196	,	4	),
cr(	197	,	4	),
cr(	198	,	10	),
cr(	199	,	13	),
cr(	200	,	19	),
cr(	201	,	14	),
cr(	202	,	27	),
cr(	203	,	31	),
cr(	204	,	1	),
cr(	205	,	13	),
cr(	206	,	16	),
cr(	207	,	10	),
cr(	208	,	30	),
cr(	209	,	22	),
cr(	210	,	11	),
cr(	211	,	28	),
cr(	212	,	33	),
cr(	213	,	4	),
cr(	214	,	1	),
cr(	215	,	33	),
cr(	216	,	20	),
cr(	217	,	36	),
cr(	218	,	2	),
cr(	219	,	24	),
cr(	220	,	14	),
cr(	221	,	21	),
cr(	222	,	12	),
cr(	223	,	13	),
cr(	224	,	35	),
cr(	225	,	36	),
cr(	226	,	17	),
cr(	227	,	30	),
cr(	228	,	27	),
cr(	229	,	24	),
cr(	230	,	33	),
cr(	231	,	7	),
cr(	232	,	26	),
cr(	233	,	35	),
cr(	234	,	23	),
cr(	235	,	8	),
cr(	236	,	4	),
cr(	237	,	32	),
cr(	238	,	4	),
cr(	239	,	19	),
cr(	240	,	23	),
cr(	241	,	23	),
cr(	242	,	33	),
cr(	243	,	21	),
cr(	244	,	0	),
cr(	245	,	31	),
cr(	246	,	23	),
cr(	247	,	2	),
cr(	248	,	9	),
cr(	249	,	10	),
cr(	250	,	23	),
cr(	251	,	3	),
cr(	252	,	33	),
cr(	253	,	29	),
cr(	254	,	9	),
cr(	255	,	10	),
cr(	256	,	19	),
cr(	257	,	20	),
cr(	258	,	1	),
cr(	259	,	11	),
cr(	260	,	20	),
cr(	261	,	6	),
cr(	262	,	8	),
cr(	263	,	12	),
cr(	264	,	28	),
cr(	265	,	10	),
cr(	266	,	11	),
cr(	267	,	9	),
cr(	268	,	25	),
cr(	269	,	30	),
cr(	270	,	33	),
cr(	271	,	1	),
cr(	272	,	33	),
cr(	273	,	27	),
cr(	274	,	25	),
cr(	275	,	17	),
cr(	276	,	19	),
cr(	277	,	28	),
cr(	278	,	2	),
cr(	279	,	29	),
cr(	280	,	14	),
cr(	281	,	13	),
cr(	282	,	35	),
cr(	283	,	16	),
cr(	284	,	16	),
cr(	285	,	29	),
cr(	286	,	34	),
cr(	287	,	34	),
cr(	288	,	9	),
cr(	289	,	28	),
cr(	290	,	0	),
cr(	291	,	3	),
cr(	292	,	14	),
cr(	293	,	33	),
cr(	294	,	33	),
cr(	295	,	11	),
cr(	296	,	6	),
cr(	297	,	18	),
cr(	298	,	16	),
cr(	299	,	34	),
cr(	300	,	14	),
cr(	301	,	25	),
cr(	302	,	13	),
cr(	303	,	21	),
cr(	304	,	14	),
cr(	305	,	16	),
cr(	306	,	31	),
cr(	307	,	15	),
cr(	308	,	7	),
cr(	309	,	10	),
cr(	310	,	34	),
cr(	311	,	36	),
cr(	312	,	14	),
cr(	313	,	24	),
cr(	314	,	32	),
cr(	315	,	32	),
cr(	316	,	5	),
cr(	317	,	19	),
cr(	318	,	20	),
cr(	319	,	3	),
cr(	320	,	13	),
cr(	321	,	9	),
cr(	322	,	32	),
cr(	323	,	0	),
cr(	324	,	25	),
cr(	325	,	7	),
cr(	326	,	32	),
cr(	327	,	36	),
cr(	328	,	28	),
cr(	329	,	16	),
cr(	330	,	12	),
cr(	331	,	28	),
cr(	332	,	0	),
cr(	333	,	17	),
cr(	334	,	16	),
cr(	335	,	14	),
cr(	336	,	9	),
cr(	337	,	31	),
cr(	338	,	2	),
cr(	339	,	8	),
cr(	340	,	0	),
cr(	341	,	0	),
cr(	342	,	33	),
cr(	343	,	15	),
cr(	344	,	10	),
cr(	345	,	19	),
cr(	346	,	7	),
cr(	347	,	4	),
cr(	348	,	18	),
cr(	349	,	1	),
cr(	350	,	15	),
cr(	351	,	35	),
cr(	352	,	2	),
cr(	353	,	29	),
cr(	354	,	3	),
cr(	355	,	15	),
cr(	356	,	10	),
cr(	357	,	33	),
cr(	358	,	30	),
cr(	359	,	31	),
cr(	360	,	29	),
cr(	361	,	34	),
cr(	362	,	29	),
cr(	363	,	26	),
cr(	364	,	9	),
cr(	365	,	21	),
cr(	366	,	18	),
cr(	367	,	35	),
cr(	368	,	4	),
cr(	369	,	34	),
cr(	370	,	23	),
cr(	371	,	27	),
cr(	372	,	7	),
cr(	373	,	26	),
cr(	374	,	6	),
cr(	375	,	17	),
cr(	376	,	18	),
cr(	377	,	34	),
cr(	378	,	24	),
cr(	379	,	35	),
cr(	380	,	6	),
cr(	381	,	32	),
cr(	382	,	31	),
cr(	383	,	7	),
cr(	384	,	1	),
cr(	385	,	17	),
cr(	386	,	9	),
cr(	387	,	25	),
cr(	388	,	26	),
cr(	389	,	23	),
cr(	390	,	9	),
cr(	391	,	9	),
cr(	392	,	20	),
cr(	393	,	7	),
cr(	394	,	10	),
cr(	395	,	29	),
cr(	396	,	8	),
cr(	397	,	12	),
cr(	398	,	26	),
cr(	399	,	26	),
cr(	400	,	5	),
cr(	401	,	33	),
cr(	402	,	22	),
cr(	403	,	19	),
cr(	404	,	27	),
cr(	405	,	33	),
cr(	406	,	24	),
cr(	407	,	33	),
cr(	408	,	14	),
cr(	409	,	21	),
cr(	410	,	10	),
cr(	411	,	30	),
cr(	412	,	23	),
cr(	413	,	27	),
cr(	414	,	17	),
cr(	415	,	24	),
cr(	416	,	11	),
cr(	417	,	18	),
cr(	418	,	26	),
cr(	419	,	16	),
cr(	420	,	30	),
cr(	421	,	16	),
cr(	422	,	19	),
cr(	423	,	3	),
cr(	424	,	25	),
cr(	425	,	16	),
cr(	426	,	31	),
cr(	427	,	34	),
cr(	428	,	4	),
cr(	429	,	33	),
cr(	430	,	0	),
cr(	431	,	31	),
cr(	432	,	26	),
cr(	433	,	28	),
cr(	434	,	36	),
cr(	435	,	21	),
cr(	436	,	7	),
cr(	437	,	13	),
cr(	438	,	34	),
cr(	439	,	20	),
cr(	440	,	15	),
cr(	441	,	15	),
cr(	442	,	4	),
cr(	443	,	11	),
cr(	444	,	7	),
cr(	445	,	30	),
cr(	446	,	25	),
cr(	447	,	31	),
cr(	448	,	15	),
cr(	449	,	27	),
cr(	450	,	7	),
cr(	451	,	21	),
cr(	452	,	12	),
cr(	453	,	27	),
cr(	454	,	6	),
cr(	455	,	22	),
cr(	456	,	26	),
cr(	457	,	17	),
cr(	458	,	33	),
cr(	459	,	30	),
cr(	460	,	15	),
cr(	461	,	9	),
cr(	462	,	14	),
cr(	463	,	13	),
cr(	464	,	17	),
cr(	465	,	25	),
cr(	466	,	26	),
cr(	467	,	3	),
cr(	468	,	33	),
cr(	469	,	20	),
cr(	470	,	27	),
cr(	471	,	32	),
cr(	472	,	12	),
cr(	473	,	21	),
cr(	474	,	6	),
cr(	475	,	2	),
cr(	476	,	4	),
cr(	477	,	7	),
cr(	478	,	36	),
cr(	479	,	0	),
cr(	480	,	2	),
cr(	481	,	13	),
cr(	482	,	11	),
cr(	483	,	14	),
cr(	484	,	26	),
cr(	485	,	12	),
cr(	486	,	29	),
cr(	487	,	16	),
cr(	488	,	17	),
cr(	489	,	11	),
cr(	490	,	35	),
cr(	491	,	26	),
cr(	492	,	24	),
cr(	493	,	29	),
cr(	494	,	32	),
cr(	495	,	24	),
cr(	496	,	3	),
cr(	497	,	20	),
cr(	498	,	25	),
cr(	499	,	12	),
cr(	500	,	15	),
cr(	501	,	15	),
cr(	502	,	15	),
cr(	503	,	16	),
cr(	504	,	13	),
cr(	505	,	28	),
cr(	506	,	21	),
cr(	507	,	5	),
cr(	508	,	11	),
cr(	509	,	16	),
cr(	510	,	31	),
cr(	511	,	18	),
cr(	512	,	2	),
cr(	513	,	25	),
cr(	514	,	22	),
cr(	515	,	10	),
cr(	516	,	0	),
cr(	517	,	5	),
cr(	518	,	18	),
cr(	519	,	34	),
cr(	520	,	32	),
cr(	521	,	34	),
cr(	522	,	17	),
cr(	523	,	28	),
cr(	524	,	33	),
cr(	525	,	25	),
cr(	526	,	18	),
cr(	527	,	20	),
cr(	528	,	31	),
cr(	529	,	5	),
cr(	530	,	19	),
cr(	531	,	29	),
cr(	532	,	6	),
cr(	533	,	10	),
cr(	534	,	4	),
cr(	535	,	25	),
cr(	536	,	7	),
cr(	537	,	17	),
cr(	538	,	2	),
cr(	539	,	9	),
cr(	540	,	32	),
cr(	541	,	22	),
cr(	542	,	16	),
cr(	543	,	32	),
cr(	544	,	11	),
cr(	545	,	1	),
cr(	546	,	29	),
cr(	547	,	17	),
cr(	548	,	34	),
cr(	549	,	18	),
cr(	550	,	15	),
cr(	551	,	22	),
cr(	552	,	20	),
cr(	553	,	34	),
cr(	554	,	7	),
cr(	555	,	5	),
cr(	556	,	28	),
cr(	557	,	36	),
cr(	558	,	4	),
cr(	559	,	22	),
cr(	560	,	8	),
cr(	561	,	29	),
cr(	562	,	10	),
cr(	563	,	33	),
cr(	564	,	34	),
cr(	565	,	30	),
cr(	566	,	12	),
cr(	567	,	7	),
cr(	568	,	2	),
cr(	569	,	15	),
cr(	570	,	16	),
cr(	571	,	12	),
cr(	572	,	6	),
cr(	573	,	36	),
cr(	574	,	28	),
cr(	575	,	4	),
cr(	576	,	18	),
cr(	577	,	26	),
cr(	578	,	16	),
cr(	579	,	32	),
cr(	580	,	22	),
cr(	581	,	17	),
cr(	582	,	18	),
cr(	583	,	11	),
cr(	584	,	21	)

    # ... (continue with the remaining rows)
]

# Prompt user for a Number Value to check
target_value = int(input("Enter a Number Value to check: "))

# Find and print rows above and below the identified matching number value for the 1st and 2nd columns
found_rows = []

for row in table:
    if row["Value"] == target_value:
        found_rows.append(row)

# Sort the found rows by S.No column
found_rows.sort(key=lambda x: x["S.No"])

for found_row in found_rows:
    index = table.index(found_row)

    # Rows above
    above_rows = table[max(0, index - 2):index]
    print("b", [['R:' + str(row["S.No"]), row["Value"]] for row in above_rows], sep='\n', end='\n\n')

    # Row matching the specified Value
    #print("Cur", ['R:' + str(found_row["S.No"]), found_row["Value"]], end='\n\n')

    # Rows below
    below_rows = table[index + 1:index + 3]
    print("a", [['R:' + str(row["S.No"]), row["Value"]] for row in below_rows], sep='\n', end='\n\n')

    # Repeat the process for the other two columns (Value and Multiplier)
    # ...

# If the target value is not found
if not found_rows:
    print(f"No rows found for the specified Value: [{target_value}]")
